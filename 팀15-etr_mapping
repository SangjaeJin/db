ER diagram의 변화

고객이 상품을 주문하기 때문에 ORDERS라는 relation이 생겼다.
M명의 고객이 N개의 상품을 주문할 수 있기때문에 cardinality ratio는 M:N이고
모든 고객이 상품을 주문할 필요는 없고, 상품또한 모든것이 주문받지 않을 수 있기 때문에 양쪽 모두 partial relationship 이다.
또한 고객이 상품을 1개만 주문하는 것은 아니기 때문에 ORDERS 릴레이션은 주문량이라는 어트리뷰트를 가진다. 또한 주문날짜,시각 어트리뷰트도 가진다..

장바구니 엔터티는 담긴 상품의 종류의 수 라는 어트리뷰트가 새로 생겼다.
매장 엔터티는 소속/직책 어트리뷰트가 사라졌다.




관계형 스키마 설명.

일단 customer, item,producer,retailer,category 엔터티는 모두 기본 엔터티 이기 때문에 각각의 어트리뷰트를 그대로 가진다.
Shoppingbag은 customer엔터티의 weak entity이고, HAS A 관계로 customer 엔터티와 묶여있기 때문에 customer의 id를 가리키는 c_id라는 포린키를 가진다. 담긴 상품 수 어트리뷰트는 그대로 가진다

category 엔터티는 item 엔터티와 HAS 릴레이션으로 묶여있다. 따라서 category 엔터티의 key 어트리뷰트인 소분류를 가리키는 cat_sub라는 포린키를 가지고 있다.

Item 엔터티는 PRODUCER 엔터티와도 IS MADE BY/FROM 관계로 묶여 있는데, PRODUCER의 키 어트리뷰트 ssn을 가리키는 p_ssn을 포린키로 가진다.

retailer와 item 엔터티는 또한 EXISTS IN의 관계로 묶여있다 . 하지만 M:N의 cardinality ratio를 가지기 때문에
테이블을 따로 만들고 , item의 키 어트리뷰트 ssn과 retailer의 ssn을 각각 가리키는 I_ssn,R_ssn을 포린키 ,또한 primary key로 가진다.
재고량이 또다른 어트리뷰트로 들어간다 .

item과 shoppingback 엔터티는 is in관계인데 이 또한 M:N의 cardinality ratio를 가진다.
따라서 테이블을 따로 만들고, item의 ssn, customer의 id를 가리키는 I_ssn,S_c_id를 포린키로,primary key로 가진다.

customer엔터티와 item사이의 orders 릴레이션도 m:n의 cardinality ratio를 가지기 때문에
따로 테이블을 만들고, 고객의 key, 상품의 key 어트리뷰트를 가리키는 c_id,i_ssn을 포린키,primary key로 가지고
주문량,을 또다른 어트리뷰트로 가진다.



